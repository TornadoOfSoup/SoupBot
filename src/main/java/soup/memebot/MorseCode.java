package soup.memebot;

import java.util.HashMap;
import java.util.Map;

import static java.util.Map.entry;

public final class MorseCode {

    private MorseCode() {};

    public static final Map<Character, String> MORSE_TO_MAP = Map.ofEntries(
            entry('a', ".-"),
            entry('b', "-..."),
            entry('c',  "-.-."),
            entry('d',  "-.."),
            entry('e',    "."),
            entry('f', "..-."),
            entry('g',  "--."),
            entry('h', "...."),
            entry('i',   ".."),
            entry('j', ".---"),
            entry('k',   "-.-"),
            entry('l', ".-.."),
            entry('m',   "--"),
            entry('n',   "-."),
            entry('o',  "---"),
            entry('p', ".--."),
            entry('q', "--.-"),
            entry('r', ".-."),
            entry('s',  "..."),
            entry('t',   "-"),
            entry('u',  "..-"),
            entry('v', "...-"),
            entry('w',  ".--"),
            entry('x', "-..-"),
            entry('y', "-.--"),
            entry('z', "--.."),
            entry('1', ".----"),
            entry('2',"..---"),
            entry('3', "...--"),
            entry('4', "....-"),
            entry('5', "....."),
            entry('6', "-...."),
            entry('7', "--..."),
            entry('8', "---.."),
            entry('9', "----."),
            entry('0', "-----"),
            entry('&', ".-..."),
            entry('\'', ".----."),
            entry(')', "-.--.-"),
            entry('(', "-.---."),
            entry(':', "---..."),
            entry(',', "--..--"),
            entry('!', "-.-.--"),
            entry('.', ".-.-.-"),
            entry('-', "-....-"),
            entry('"', ".-..-."),
            entry('?', "..--.."),
            entry('/', "-..-."),
            entry(' ', "/")
    );

    public static final Map<String, Character> MORSE_FROM_MAP = Map.ofEntries(
            entry(".-", 'a'),
            entry("-...", 'b'),
            entry("-.-.",'c'),
            entry("-..",'d'),
            entry(".",   'e'),
            entry("..-.",'f'),
            entry("--.", 'g'),
            entry("....",'h'),
            entry("..",  'i'),
            entry(".---",'j'),
            entry("-.-",  'k'),
            entry(".-..",'l'),
            entry("--",  'm'),
            entry("-.",  'n'),
            entry("---", 'o'),
            entry(".--.",'p'),
            entry("--.-",'q'),
            entry(".-.", 'r'),
            entry("...", 's'),
            entry("-",   't'),
            entry("..-", 'u'),
            entry("...-",'v'),
            entry(".--", 'w'),
            entry("-..-",'x'),
            entry("-.--",'y'),
            entry("--..",'z'),
            entry(".----",'1'),
            entry("..---",'2'),
            entry("...--",'3'),
            entry("....-",'4'),
            entry(".....",'5'),
            entry("-....",'6'),
            entry("--...",'7'),
            entry("---..",'8'),
            entry("----.",'9'),
            entry("-----",'0'),
            entry(".-...", '&'),
            entry(".----.", '\''),
            entry("-.--.-", ')'),
            entry("-.---.", '('),
            entry("---...", ':'),
            entry("--..--", ','),
            entry("-.-.--", '!'),
            entry(".-.-.-", '.'),
            entry("-....-", '-'),
            entry(".-..-.", '"'),
            entry("..--..", '?'),
            entry("-..-.", '/'),
            entry("/", ' ')
    );
}

